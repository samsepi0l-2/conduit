{
  "uid" : "7ac1aa808e8c20",
  "name" : "test_data_to_file",
  "fullName" : "test.test_sign_up_sign_in_cookie.TestConduitakarmi#test_data_to_file",
  "historyId" : "fb6395a5d3fc65da3900c741272f44e0",
  "time" : {
    "start" : 1628721744720,
    "stop" : 1628721746022,
    "duration" : 1302
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Upper bound must be positive.",
  "statusTrace" : "self = <test_sign_up_sign_in_cookie.TestConduitakarmi object at 0x7fb74c34ae80>\n\n    def test_data_to_file(self):\n        login(self.driver)\n        authors = self.driver.find_elements_by_xpath(\"//a[@class = 'author']\")\n        titles = self.driver.find_elements_by_xpath(\"//a[@class = 'preview-link']/h1\")\n        summaries = self.driver.find_elements_by_xpath(\"//a[@class = 'preview-link']/p\")\n        likes = self.driver.find_elements_by_xpath(\"//span[@class = 'counter']\")\n    \n        with open('output_data.csv', 'w', encoding='utf-8') as new_csv:\n            new_csv.write(\"author\" + \",\" + \"title\" + \",\" + \"summary\" + \",\" + \"number_of_likes\" + \"\\n\")\n            for i in range(len(authors) - 1):\n                new_csv.write(authors[i].text + \",\" + titles[i].text + \",\" + summaries[i].text + \",\" + likes[i].text + \"\\n\")\n    \n        with open('output_data.csv', 'r', encoding=\"utf-8\") as file:\n            rows = list(file)\n    \n>           random_line_index = secrets.randbelow(len(authors) - 1)\n\ntest/test_sign_up_sign_in_cookie.py:265: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexclusive_upper_bound = -1\n\n    def randbelow(exclusive_upper_bound):\n        \"\"\"Return a random int in the range [0, n).\"\"\"\n        if exclusive_upper_bound <= 0:\n>           raise ValueError(\"Upper bound must be positive.\")\nE           ValueError: Upper bound must be positive.\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/secrets.py:29: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Upper bound must be positive.",
    "statusTrace" : "self = <test_sign_up_sign_in_cookie.TestConduitakarmi object at 0x7fb74c34ae80>\n\n    def test_data_to_file(self):\n        login(self.driver)\n        authors = self.driver.find_elements_by_xpath(\"//a[@class = 'author']\")\n        titles = self.driver.find_elements_by_xpath(\"//a[@class = 'preview-link']/h1\")\n        summaries = self.driver.find_elements_by_xpath(\"//a[@class = 'preview-link']/p\")\n        likes = self.driver.find_elements_by_xpath(\"//span[@class = 'counter']\")\n    \n        with open('output_data.csv', 'w', encoding='utf-8') as new_csv:\n            new_csv.write(\"author\" + \",\" + \"title\" + \",\" + \"summary\" + \",\" + \"number_of_likes\" + \"\\n\")\n            for i in range(len(authors) - 1):\n                new_csv.write(authors[i].text + \",\" + titles[i].text + \",\" + summaries[i].text + \",\" + likes[i].text + \"\\n\")\n    \n        with open('output_data.csv', 'r', encoding=\"utf-8\") as file:\n            rows = list(file)\n    \n>           random_line_index = secrets.randbelow(len(authors) - 1)\n\ntest/test_sign_up_sign_in_cookie.py:265: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexclusive_upper_bound = -1\n\n    def randbelow(exclusive_upper_bound):\n        \"\"\"Return a random int in the range [0, n).\"\"\"\n        if exclusive_upper_bound <= 0:\n>           raise ValueError(\"Upper bound must be positive.\")\nE           ValueError: Upper bound must be positive.\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/secrets.py:29: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a7f29989be611e51",
      "name" : "log",
      "source" : "a7f29989be611e51.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "aee376679d0b4a90",
      "name" : "stderr",
      "source" : "aee376679d0b4a90.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_sign_up_sign_in_cookie"
  }, {
    "name" : "subSuite",
    "value" : "TestConduitakarmi"
  }, {
    "name" : "host",
    "value" : "fv-az83-188"
  }, {
    "name" : "thread",
    "value" : "3818-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_sign_up_sign_in_cookie"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7ac1aa808e8c20.json",
  "parameterValues" : [ ]
}